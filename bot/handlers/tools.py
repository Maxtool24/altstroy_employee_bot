from telegram import Update
from telegram.ext import CallbackContext
from ..database.db import add_tool_db, get_tools, update_tool_photo
import os

def add_tool(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_tool. –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        tool_name = ' '.join(context.args[:-1]) if context.args else None
        quantity = context.args[-1] if context.args and context.args[-1].isdigit() else None

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∫–∞–∑–∞–Ω—ã
        if not tool_name or not quantity:
            update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏ –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.\n–ü—Ä–∏–º–µ—Ä: /add_tool –ú–æ–ª–æ—Ç–æ–∫ 5")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if add_tool_db(tool_name, int(quantity)):
            update.message.reply_text(f"–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç '{tool_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º {quantity}.")
        else:
            update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.")
    except Exception as e:
        update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

def add_tool_photo(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
    """
    try:
        user_id = update.message.from_user.id
        tool_name = ' '.join(context.args) if context.args else None

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —É–∫–∞–∑–∞–Ω–æ
        if not tool_name:
            update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.\n–ü—Ä–∏–º–µ—Ä: /add_tool_photo –ú–æ–ª–æ—Ç–æ–∫")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
        if update.message.photo:
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
            photo_file = update.message.photo[-1].get_file()
            photo_path = f"photos/tools/{tool_name}_{user_id}.jpg"

            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            os.makedirs(os.path.dirname(photo_path), exist_ok=True)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
            photo_file.download(photo_path)

            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            if update_tool_photo(tool_name, photo_path):
                update.message.reply_text(f"–§–æ—Ç–æ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ '{tool_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.")
            else:
                update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.")
        else:
            update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.")
    except Exception as e:
        update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

def view_tools(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /view_tools. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        tools = get_tools()

        if tools:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–∂–¥–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ
            tool_messages = []
            for tool in tools:
                tool_id, name, quantity, in_repair, photo_path = tool
                tool_messages.append(
                    f"ID: {tool_id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {name}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}, "
                    f"–í —Ä–µ–º–æ–Ω—Ç–µ: {'–î–∞' if in_repair else '–ù–µ—Ç'}, –§–æ—Ç–æ: {photo_path if photo_path else '–ù–µ—Ç'}"
                )
            update.message.reply_text("\n".join(tool_messages))
        else:
            update.message.reply_text("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.")
    except Exception as e:
        update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

def tools_menu(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–Ω—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.
    """
    update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(
            [
                ['‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç', 'üìã –°–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤'],
                ['üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞', 'üîô –ù–∞–∑–∞–¥']
            ],
            resize_keyboard=True
        )
    )